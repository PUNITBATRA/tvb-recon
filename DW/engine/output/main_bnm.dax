<?xml version="1.0" encoding="UTF-8"?>
<!-- generated: 2016-10-12 14:31:44.549187 -->
<!-- generated by: lia.domide -->
<!-- generator: python -->
<adag xmlns="http://pegasus.isi.edu/schema/DAX" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pegasus.isi.edu/schema/DAX http://pegasus.isi.edu/schema/dax-3.6.xsd" version="3.6" name="BNM">
	<metadata key="dataFlowConfiguration">extra/patient1.properties</metadata>
	<metadata key="name">BrainNetworkModelReconstructionFlow</metadata>
	<metadata key="created">Wed Oct 12 14:31:44 2016</metadata>
	<job id="ID0000001" name="mri_convert" node-label="DICOM input pre-processing for T1">
		<argument><file name="$T1$"/> <file name="t1-raw.nii.gz"/> --out_orientation RAS -rt nearest</argument>
		<uses name="$T1$" link="input"/>
		<uses name="t1-raw.nii.gz" link="output" register="false" transfer="false"/>
	</job>
	<job id="ID0000002" name="recon-all" node-label="Call &apos;recon-all&apos; for T1">
		<argument>-s XYZ -i <file name="t1-raw.nii.gz"/> -all -parallel -openmp 2</argument>
		<uses name="t1-raw.nii.gz" link="input"/>
	</job>
	<job id="ID0000003" name="recon-all" node-label="Call &apos;recon-all&apos; for T2">
		<argument>-s XYZ -T2 <file name="$T2$"/> -T2pial -autorecon3 -parallel -openmp 2</argument>
		<uses name="$T2$" link="input"/>
	</job>
	<job id="ID0000004" name="mri_convert" node-label="DICOM input pre-processing for FLAIR">
		<argument><file name="$FLAIR$"/> <file name="flair-raw.nii.gz"/> --out_orientation RAS -rt nearest</argument>
		<uses name="$FLAIR$" link="input"/>
		<uses name="flair-raw.nii.gz" link="output" register="false" transfer="false"/>
	</job>
	<job id="ID0000005" name="recon-all" node-label="Call &apos;recon-all&apos; for FLAIR">
		<argument>-s XYZ -FLAIR <file name="flair-raw.nii.gz"/> -FLAIRpial -autorecon3 -parallel -openmp 2</argument>
		<uses name="flair-raw.nii.gz" link="input"/>
	</job>
	<job id="ID0000006" name="mri_convert" node-label="Generate APARC-ASEG nifti file with good orientation">
		<argument><file name="$MRI_aparc_aseg.mgz$"/> <file name="aparc+aseg.nii.gz"/> --out_orientation RAS -rt nearest</argument>
		<uses name="$MRI_aparc_aseg.mgz$" link="input"/>
		<uses name="aparc+aseg.nii.gz" link="output" register="false" transfer="false"/>
	</job>
	<job id="ID0000007" name="mrchoose" node-label="DWI input pre-processing 0 (Reversed, DICOM)">
		<argument>0 mrconvert <file name="$DWI$"/> <file name="dwi_raw.mif"/></argument>
		<uses name="$DWI$" link="input"/>
		<uses name="dwi_raw.mif" link="output" register="false" transfer="false"/>
	</job>
	<job id="ID0000008" name="mrchoose" node-label="DWI input pre-processing 1 (Reversed, DICOM)">
		<argument>1 mrconvert <file name="$DWI$"/> <file name="dwi_raw_re.mif"/></argument>
		<uses name="$DWI$" link="input"/>
		<uses name="dwi_raw_re.mif" link="output" register="false" transfer="false"/>
	</job>
	<job id="ID0000009" name="dwipreproc" node-label="Preprocess with eddy correct (Reversed)">
		<argument>ap <file name="dwi_raw.mif"/> <file name="dwi.mif"/> -rpe_pair <file name="dwi_raw.mif"/> <file name="dwi_raw_re.mif"/> -nthreads 2</argument>
		<uses name="dwi_raw.mif" link="input"/>
		<uses name="dwi_raw_re.mif" link="output" register="false" transfer="false"/>
		<uses name="dwi.mif" link="output" register="false" transfer="false"/>
	</job>
	<job id="ID0000010" name="dwi2mask" node-label="Create Brain Mask">
		<argument><file name="dwi.mif"/> <file name="mask.mif"/> -nthreads 2</argument>
		<uses name="dwi.mif" link="input"/>
		<uses name="mask.mif" link="output" register="false" transfer="false"/>
	</job>
	<job id="ID0000011" name="dwiextract" node-label="Extract BZERO">
		<argument><file name="dwi.mif"/> <file name="b0.nii.gz"/> -bzero -nthreads 2</argument>
		<uses name="dwi.mif" link="input"/>
		<uses name="b0.nii.gz" link="output" register="false" transfer="false"/>
	</job>
	<job id="ID0000012" name="mri_convert" node-label="Convert T1 to NIFTI with good orientation">
		<argument><file name="$MRI_T1.mgz$"/> <file name="t1-mri.nii.gz"/> --out_orientation RAS -rt nearest</argument>
		<uses name="$MRI_T1.mgz$" link="input"/>
		<uses name="t1-mri.nii.gz" link="output" register="false" transfer="false"/>
	</job>
	<job id="ID0000013" name="flirt" node-label="Register DWI to T1 and get the relevant transform">
		<argument>-in <file name="b0.nii.gz"/> -ref <file name="t1-mri.nii.gz"/> -omat <file name="d2t.mat"/> -out <file name="b0-in-t1.nii.gz"/> -dof 12 -searchrx -180 180 -searchry -180 180 -searchrz -180 180 -cost mutualinfo</argument>
		<uses name="b0.nii.gz" link="input"/>
		<uses name="t1-mri.nii.gz" link="input"/>
		<uses name="d2t.mat" link="output" register="false" transfer="false"/>
		<uses name="b0-in-t1.nii.gz" link="output" register="false" transfer="false"/>
	</job>
	<job id="ID0000014" name="convert_xfm" node-label="Generate inverse transform from T1 to DWI">
		<argument>-omat <file name="t2d.mat"/> -inverse <file name="d2t.mat"/></argument>
		<uses name="d2t.mat" link="input"/>
		<uses name="t2d.mat" link="output" register="false" transfer="false"/>
	</job>
	<job id="ID0000015" name="flirt" node-label="Apply inverse transform from T1 to DWI">
		<argument>-applyxfm -in <file name="t1-mri.nii.gz"/> -ref <file name="b0.nii.gz"/> -out <file name="t1-in-d.nii.gz "/> -init <file name="t2d.mat"/> -interp nearestneighbour</argument>
		<uses name="b0.nii.gz" link="input"/>
		<uses name="t1-mri.nii.gz" link="input"/>
		<uses name="t2d.mat" link="input"/>
		<uses name="t1-in-d.nii.gz " link="output" register="false" transfer="false"/>
	</job>
	<child ref="ID0000002">
		<parent ref="ID0000001"/>
	</child>
	<child ref="ID0000003">
		<parent ref="ID0000002"/>
	</child>
	<child ref="ID0000004">
		<parent ref="ID0000003"/>
	</child>
	<child ref="ID0000005">
		<parent ref="ID0000004"/>
	</child>
	<child ref="ID0000006">
		<parent ref="ID0000005"/>
	</child>
	<child ref="ID0000008">
		<parent ref="ID0000007"/>
	</child>
	<child ref="ID0000009">
		<parent ref="ID0000008"/>
	</child>
	<child ref="ID0000010">
		<parent ref="ID0000009"/>
	</child>
	<child ref="ID0000011">
		<parent ref="ID0000010"/>
	</child>
	<child ref="ID0000012">
		<parent ref="ID0000002"/>
	</child>
	<child ref="ID0000013">
		<parent ref="ID0000011"/>
		<parent ref="ID0000012"/>
	</child>
	<child ref="ID0000014">
		<parent ref="ID0000013"/>
	</child>
	<child ref="ID0000015">
		<parent ref="ID0000014"/>
	</child>
</adag>
